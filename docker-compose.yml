services:
  pg:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: adv
      POSTGRES_USER: adv
      POSTGRES_PASSWORD: adv
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adv -d adv"]
      interval: 5s
      timeout: 3s
      retries: 20

  php:
    build:
      context: deploy
      dockerfile: ./Dockerfile
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      pg:
        condition: service_healthy

  scheduler:
    build:
      context: deploy
      dockerfile: ./Dockerfile
    working_dir: /var/www/html
    command: sh -lc "php artisan schedule:work"
    volumes:
      - .:/var/www/html
    depends_on:
      php:
        condition: service_started

  web:
    image: nginx:alpine
    ports:
      - "7080:80"
    volumes:
      - .:/var/www/html
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      php:
        condition: service_started

  node:
      image: node:22-alpine
      working_dir: /var/www/html
      ports:
          - "5173:5173"
      environment:
          - CHOKIDAR_USEPOLLING=true
      command: sh -lc "npm ci || npm i && npm run dev -- --host 0.0.0.0 --port 5173"
      volumes:
          - .:/var/www/html

volumes:
  pgdata:
